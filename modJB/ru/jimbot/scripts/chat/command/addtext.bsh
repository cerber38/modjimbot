/*
 * Скрипт для работы с текстом при входе/выходе.
 * (с)fraer72
 */

import ru.jimbot.modules.AbstractServer;
import ru.jimbot.util.*;
import ru.jimbot.modules.chat.*;
import ru.jimbot.modules.*;
import ru.jimbot.Manager;
import java.sql.*;

//Установка скрипта как обработчика команды
if(in.equals("install")){
  cmd.addCommand("!аддтекст", new Cmd("!аддтекст","$n $s",39,name));
  cmd.addAuth("textinout","работа с текстом при входе/выходе");
  out="Ok";
  return;
}

// Проверим полномочия
if(!cmd.isChat(proc,uin) && !cmd.psp.testAdmin(uin)) return;
if(!cmd.auth(proc,uin, "textinout")) return;

try{

int type = (Integer)v.get(0);
String text = (Integer)v.get(1);

if(type < 1 || type > 2){
proc.mq.add(uin,"Тип должен быть 1(Сообщение при входе) или 2(Сообщение при выходе)");
return;
}

if(text.eguals("")){
proc.mq.add(uin,"Пустой текст!");
return;
}

   PreparedStatement pst = cmd.srv.us.db.getDb().prepareStatement("insert into text_in_out values (?, ?, ?)");
   pst.setInt(1, (int)cmd.srv.us.db.getLastIndex("text_in_out"));
   pst.setString(2, type = 1 ? "in" : "out");
   pst.setString(3, text); 
   pst.execute();
   pst.close();

proc.mq.add(uin,"Команда выполнена!");

}catch (Exception ex) {
ex.printStackTrace();
proc.mq.add(uin,"При создании текста возникла ошибка: " + ex.getMessage());
}
